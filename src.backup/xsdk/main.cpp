#include "xsdk/xsdk.hpp"

API api;

// apprun必须声明为ECALL(易语言调用约定)并导出到dll
estring ECALL _declspec(dllexport) apprun(estring apidata, estring pluginkey)
{
    api.init(pluginkey, apidata);  // 初始化API，请勿删除

    // 插件信息
    PluginInformation info;

    // 字符串前必须加上L，表明该字符串为宽字符串
    info.SetName(L"<插件名>");
    info.SetAuthor(L"<作者名>");
    info.SetDescription(L"可以用此模板来开发插件\r\n官网地址：http://www.xiaolz.cn/");
    info.SetVersion(L"1.0.0");

    // 使用api前必须先申请权限，否则将没有权限使用
    info.RequestPermission(权限_输出日志, L"方便调试插件");
    info.RequestPermission(权限_处理群验证事件, L"用于实现自动同意入群功能");
    info.RequestPermission(权限_处理好友验证事件, L"用于实现自动同意加好友功能");
    info.RequestPermission(权限_更改群聊消息内容, L"用于实现群聊消息输入替换功能");
    info.RequestPermission(权限_更改私聊消息内容, L"用于实现私聊消息输入替换功能");
    info.RequestPermission(权限_获取订单详情, L"用于查询转账信息");

    // 设置回调函数，不用的回调函数可以不设置
    info.SetGroupMessageCallback(GroupMessageCallback);  // 群消息回调函数
    info.SetPrivateMessageCallback(PrivateMessageCallback);  // 私聊消息回调函数
    info.SetEventCallback(EventCallback);  // 事件回调函数
    // info.SetPluginUnloadCallback(PluginUnloadCallback);  // 插件即将被卸载回调函数
    // info.SetPluginSettingsCallback(PluginSettingsCallback);  // 点击插件设置回调函数
    // info.SetPluginEnableCallback(PluginEnableCallback);  // 插件被启用回调函数
    // info.SetPluginDisableCallback(PluginDisableCallback);  // 插件被禁用回调函数

    // 将插件信息提交给框架
    return info.GetData();
}

uint32_t PrivateMessageCallback()

/*

.子程序 收到私聊消息, 整数型, , 1后面的插件不再处理此消息,0后面的插件仍可处理此消息
.参数 数据指针, 整数型, ,

.局部变量 数据, 私聊消息数据, , ,

 ' 请勿在此执行上传文件之类的耗时操作，此类操作请另开线程执行
读取私聊消息数据 (数据指针, 数据)
.如果真 (并且 (大于 (数据.消息分片标识, 0), 不等于 (相加 (数据.消息分片序列, 1), 数据.消息分片数量))) ' 序列从0开始，过滤腾讯长消息自动分片的片段内容，你也可以删除这里获取分片片段内容
    返回 (#消息处理_忽略)
.如果真结束

.判断开始 (等于 (数据.消息类型, #消息类型_临时会话))
    .判断开始 (等于 (数据.消息子临时类型, #消息类型_临时会话_群临时))

    .判断 (等于 (数据.消息子临时类型, #消息类型_临时会话_公众号))

    .判断 (等于 (数据.消息子临时类型, #消息类型_临时会话_网页QQ咨询))

    .默认

    .判断结束

.判断 (等于 (数据.消息类型, #消息类型_好友通常消息))
    .判断开始 (不等于 (数据.发送人QQ, 数据.框架QQ)) ' 自己的消息，这里应该避免自己和自己聊天

    .默认

    .判断结束

.判断 (等于 (数据.消息类型, #消息类型_好友语音))

.判断 (等于 (数据.消息类型, #消息类型_好友文件))

.默认

.判断结束
返回 (#消息处理_忽略)

.子程序 收到群消息, 整数型, , 1后面的插件不再处理此消息,0后面的插件仍可处理此消息
.参数 数据指针, 整数型, ,

.局部变量 数据, 群消息数据, , ,

 ' 请勿在此执行上传文件之类的耗时操作，此类操作请另开线程执行
读取群消息数据 (数据指针, 数据)
.如果真 (并且 (大于 (数据.消息分片标识, 0), 不等于 (相加 (数据.消息分片序列, 1), 数据.消息分片数量))) ' 序列从0开始，过滤腾讯长消息自动分片的片段内容，你也可以删除这里获取分片片段内容
    返回 (#消息处理_忽略)
.如果真结束

.判断开始 (等于 (数据.消息类型, #消息类型_群红包))
    .判断开始 (不等于 (数据.发送人QQ, 数据.框架QQ)) ' 自己的消息，这里应该避免自己和自己聊天

    .默认

    .判断结束

.判断 (等于 (数据.消息类型, #消息类型_群聊通常消息))
    .判断开始 (不等于 (数据.发送人QQ, 数据.框架QQ)) ' 自己的消息，这里应该避免自己和自己聊天
        .' 如果真 (等于 (数据.消息内容, “重启”))
             ' Api.框架重启 ()
        .如果真结束
        .' 如果真 (等于 (数据.消息内容, “重载自身”))
             ' Api.重载自身 (“C:\Users\sswoc\Desktop\TIME\empty.dll”)
        .如果真结束

    .默认

    .判断结束

.默认

.判断结束

返回 (#消息处理_忽略)

.子程序 收到事件消息, 整数型, , 1后面的插件不再处理此消息,0后面的插件仍可处理此消息
.参数 数据指针, 整数型, ,

.局部变量 数据, 事件消息数据, , ,

 ' 请勿在此执行上传文件之类的耗时操作，此类操作请另开线程执行
读取事件消息数据 (数据指针, 数据)
.判断开始 (等于 (数据.消息类型, #好友事件_签名变更))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  签名变更的QQ
     ' 数据.消息时间戳 现在的时间
     ' 数据.操作QQ昵称 新的签名内容
     ' 数据.触发QQ昵称 变更QQ的昵称
.判断 (等于 (数据.消息类型, #好友事件_昵称改变))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  昵称变更的QQ
     ' 数据.消息时间戳 现在的时间
     ' 数据.触发QQ昵称 新的昵称内容
.判断 (等于 (数据.消息类型, #好友事件_有新好友))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ 新好友的QQ
     ' 数据.消息时间戳 现在的时间
     ' 数据.触发QQ昵称 新好友的昵称
.判断 (等于 (数据.消息类型, #好友事件_好友请求))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ 对方QQ
     ' 数据.消息类型 为1：被添加为单向好友,为2：请求添加为好友
.判断 (等于 (数据.消息类型, #好友事件_被好友删除))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  删除者QQ
     ' 数据.消息时间戳 现在的时间
     ' 数据.触发QQ昵称 删除者QQ昵称
.判断 (等于 (数据.消息类型, #好友事件_某人撤回事件))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  撤回者QQ
     ' 数据.消息SEQ  可用于取缓存消息
     ' 数据.消息时间戳 撤回消息发送时间
     ' 数据.触发QQ昵称 撤回者QQ昵称
     ' 数据.消息内容 撤回消息内容
.判断 (等于 (数据.消息类型, #好友事件_对方同意了您的好友请求))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ 同意者QQ
     ' 数据.消息时间戳 同意时间
     ' 数据.触发QQ昵称 同意者QQ昵称
.判断 (等于 (数据.消息类型, #好友事件_对方拒绝了您的好友请求))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ 拒绝者QQ
     ' 数据.消息时间戳 拒绝时间
     ' 数据.触发QQ昵称 拒绝者昵称
.判断 (等于 (数据.消息类型, #好友事件_资料卡点赞))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  点赞者QQ
     ' 数据.消息时间戳 点赞时间
     ' 数据.触发QQ昵称 点赞者QQ昵称
     ' 数据.消息内容 点赞事件文本
.判断 (等于 (数据.消息类型, #好友事件_签名点赞))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  点赞者QQ
     ' 数据.消息时间戳 点赞时间
     ' 数据.触发QQ昵称 点赞者QQ昵称
     ' 数据.消息内容 点赞事件文本
     ' 数据.操作QQ昵称 签名内容
.判断 (等于 (数据.消息类型, #好友事件_签名回复))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  回复者QQ
     ' 数据.消息时间戳 回复时间
     ' 数据.触发QQ昵称 回复者QQ昵称
     ' 数据.消息内容 回复内容
     ' 数据.操作QQ昵称 签名内容
.判断 (等于 (数据.消息类型, #好友事件_个性标签点赞))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  点赞者QQ
     ' 数据.消息时间戳 点赞时间
     ' 数据.触发QQ昵称 点赞者QQ昵称
     ' 数据.消息内容 点赞事件文本
     ' 数据.操作QQ昵称 个性标签内容
.判断 (等于 (数据.消息类型, #好友事件_随心贴回复))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  回复者QQ
     ' 数据.操作QQ 随心贴发送者QQ
     ' 数据.消息时间戳 回复时间
     ' 数据.来源群名 随心贴内容
     ' 数据.触发QQ昵称 回复者QQ昵称
     ' 数据.操作QQ昵称 随心贴发送者QQ昵称
     ' 数据.消息内容 回复内容
.判断 (等于 (数据.消息类型, #好友事件_随心贴增添))
     ' 数据.框架QQ 框架QQ
     ' 数据.触发QQ  增添者QQ
     ' 数据.消息时间戳 增添时间
     ' 数据.触发QQ昵称 增添者QQ昵称
     ' 数据.消息内容 增添事件文本
     ' 数据.操作QQ昵称 随心贴内容
.判断 (等于 (数据.消息类型, #群事件_群被解散))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 解散群号
     ' 数据.消息时间戳  解散时间
     ' 数据.来源群名 解散群名
     ' 数据.操作QQ、数据.触发QQ 解散者QQ
     ' 数据.操作QQ昵称、 数据.触发QQ昵称 解散者QQ昵称
.判断 (等于 (数据.消息类型, #群事件_某人被禁言))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 事件群号
     ' 数据.操作QQ 禁言者QQ
     ' 数据.触发QQ 被禁者QQ
     ' 数据.消息SEQ 被禁秒数
     ' 数据.消息时间戳 被禁时间
     ' 数据.来源群名 事件群名
     ' 数据.操作QQ昵称 禁言者QQ昵称
     ' 数据.触发QQ昵称 被禁者QQ昵称
.判断 (等于 (数据.消息类型, #群事件_某人被解除禁言))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 事件群号
     ' 数据.操作QQ 解除者QQ
     ' 数据.触发QQ 被解除者QQ
     ' 数据.消息时间戳 被解除时间
     ' 数据.来源群名 事件群名
     ' 数据.操作QQ昵称 解除者QQ昵称
     ' 数据.触发QQ昵称 被解除者QQ昵称
.判断 (等于 (数据.消息类型, #群事件_某人加入了群))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 事件群号
     ' 数据.操作QQ 审批者QQ
     ' 数据.消息时间戳 入群时间
     ' 数据.来源群名 事件群名
     ' 数据.操作QQ昵称 审批者QQ昵称
     ' 数据.触发QQ昵称 入群者QQ昵称
.判断 (等于 (数据.消息类型, #群事件_某人被邀请入群))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 事件群号
     ' 数据.操作QQ 邀请者QQ
     ' 数据.消息时间戳 入群时间
     ' 数据.来源群名 事件群名
     ' 数据.操作QQ昵称 邀请者QQ昵称
     ' 数据.触发QQ昵称 入群者昵称
.判断 (等于 (数据.消息类型, #群事件_我被邀请加入群))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 被邀群号
     ' 数据.操作QQ 邀请者QQ
     ' 数据.消息SEQ   处理所需Seq
     ' 数据.消息时间戳 邀请时间
     ' 数据.来源群名 被邀群名称
     ' 数据.操作QQ昵称 邀请者QQ昵称
     ' 数据.触发QQ昵称 本人昵称
     ' 数据.触发QQ  邀请者QQ
.判断 (等于 (数据.消息类型, #群事件_某人申请加群))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 被申群号
     ' 数据.操作QQ 邀请者QQ
     ' 数据.消息时间戳 申请时间
     ' 数据.来源群名 被申群名称
     ' 数据.操作QQ昵称 邀请者QQ昵称
     ' 数据.触发QQ昵称 进群者QQ昵称
     ' 数据.触发QQ  进群者QQ
.判断 (等于 (数据.消息类型, #群事件_某人退出了群))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 被退群号
     ' 数据.消息时间戳 退群时间
     ' 数据.来源群名 被退群名称
     ' 数据.触发QQ昵称 退群者QQ昵称
     ' 数据.触发QQ  退群者QQ
.判断 (等于 (数据.消息类型, #群事件_某人被踢出群))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 少人群号
     ' 数据.消息时间戳 被踢时间
     ' 数据.来源群名 少人群名称
     ' 数据.触发QQ昵称 退群者QQ昵称
     ' 数据.触发QQ  退群者QQ
     ' 数据.操作QQ 踢人QQ
     ' 数据.操作QQ昵称 踢人QQ昵称
.判断 (等于 (数据.消息类型, #群事件_某人撤回事件))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 被撤群号
     ' 数据.操作QQ 撤消QQ (对方本人或管理员)
     ' 数据.触发QQ 被撤QQ
     ' 数据.消息SEQ 消息Seq
     ' 数据.消息时间戳 消息发送时间
     ' 数据.来源群名 被撤群名称
     ' 数据.操作QQ昵称 撤消QQ昵称
     ' 数据.消息内容 撤回内容
.判断 (等于 (数据.消息类型, #群事件_开启全员禁言))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 启用群号
     ' 数据.操作QQ 开启人QQ
     ' 数据.消息时间戳  开启时间
     ' 数据.来源群名 启用群名称
     ' 数据.操作QQ昵称 开启人QQ昵称
.判断 (等于 (数据.消息类型, #群事件_关闭全员禁言))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 关闭群号
     ' 数据.操作QQ 关闭人QQ
     ' 数据.消息时间戳  关闭时间
     ' 数据.来源群名 关闭群名称
     ' 数据.操作QQ昵称 关闭人QQ昵称
.判断 (等于 (数据.消息类型, #群事件_开启匿名聊天))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 启用群号
     ' 数据.操作QQ 开启人QQ
     ' 数据.消息时间戳  开启时间
     ' 数据.来源群名 启用群名称
     ' 数据.操作QQ昵称 开启人QQ昵称
.判断 (等于 (数据.消息类型, #群事件_关闭匿名聊天))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 关闭群号
     ' 数据.操作QQ 关闭人QQ
     ' 数据.消息时间戳  关闭时间
     ' 数据.来源群名 关闭群名称
     ' 数据.操作QQ昵称 关闭人QQ昵称
.判断 (等于 (数据.消息类型, #群事件_某人被取消管理))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.触发QQ  被取消者QQ
     ' 数据.消息时间戳  取消时间
     ' 数据.来源群名 发生群名
     ' 数据.触发QQ昵称 被取消者QQ昵称
.判断 (等于 (数据.消息类型, #群事件_某人被赋予管理))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.触发QQ  被赋予者QQ
     ' 数据.消息时间戳  取消时间
     ' 数据.来源群名 发生群名
     ' 数据.触发QQ昵称 被赋予者QQ昵称
.判断 (等于 (数据.消息类型, #群事件_开启坦白说))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_关闭坦白说))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_允许群临时会话))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_禁止群临时会话))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_允许发起新的群聊))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_禁止发起新的群聊))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_允许上传群文件))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_禁止上传群文件))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_允许上传相册))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_禁止上传相册))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_展示成员群头衔))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #群事件_隐藏成员群头衔))
     ' 数据.框架QQ 框架QQ
     ' 数据.来源群号 发生群号
     ' 数据.来源群名 发生群名
.判断 (等于 (数据.消息类型, #空间事件_与我相关))
     ' 数据.框架QQ 框架QQ
     ' 数据.操作QQ 触发者QQ
     ' 数据.操作QQ昵称 触发者QQ昵称
     ' 数据.消息内容 事件内容(包括说说点赞、评论、留言等，这个是腾讯返回的，不怎么详细)
.默认

.判断结束
返回 (#消息处理_忽略)


*/
